# This workflow will do a clean install of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [12.x, 14.x, 16.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - name: install node
      run: npm ci
      working-directory: ./BackEnd
    - name: Run eslint with reviewdog
        # You may pin to the exact commit or the version.
        # uses: reviewdog/action-eslint@282bf9d07bc87c519d17ca3a70e94b54232b03e0
      uses: reviewdog/action-eslint@v1.14.0
      with:
          # GITHUB_TOKEN.
          github_token: "${{ github.GHTOKEN }}" # default is ${{ github.token }}
          # Report level for reviewdog [info,warning,error]
          # level: # optional, default is error
          # Reporter of reviewdog command [github-check,github-pr-review].      Default is github-pr-review.      github-pr-review can use Markdown and add a link to rule page in reviewdog reports.

          # reporter: # optional, default is github-pr-review
          # Filtering mode for the reviewdog command [added,diff_context,file,nofilter].      Default is added.

          # filter_mode: # optional, default is added
          # Exit code for reviewdog when errors are found [true,false]      Default is `false`.

          fail_on_error: "true" # optional, default is false
          # Additional reviewdog flags
          # reviewdog_flags: # optional, default is 
          # flags and args of eslint command. Default: '.'
          # eslint_flags: # optional, default is .
          # The directory from which to look for and run eslint. Default '.'
          workdir: "./BackEnd/src/" # optional, default is .
          # Tool name to use for reviewdog reporter
          tool_name: "Linting" # optional, default is eslint
    # - name: build the backend
    #   run: npm run build --if-present # no build yet
    #   working-directory: ./BackEnd
    - name: execute all the tests
      run: npm test
      working-directory: ./BackEnd
